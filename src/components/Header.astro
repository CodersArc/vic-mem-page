---
const menuItems = [
  {title: 'Parks & Destinations'},
  { title: 'Events', href: '/events' },
  { title: 'About', href: '/about' },
  { title: 'Contact', href: '/contact' },
];
---

<header class="bg-gray-900 dark:bg-gray-950 text-white">
  <nav class="container mx-auto px-4 py-4">
    <div class="flex items-center justify-between">
      <a href="/" class="text-2xl font-bold flex items-center gap-2">
        <svg
          class="w-10 h-10 text-white dark:text-orange-400 transition-colors"
          viewBox="0 0 24 24"
          fill="currentColor"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M12 2C8.13 2 5 5.13 5 9c0 2.38 1.19 4.47 3 5.74V17c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2.26c1.81-1.27 3-3.36 3-5.74 0-3.87-3.13-7-7-7zm1 14h-2v-1h2v1zm0-3c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm2-3.74V10c0 .55-.45 1-1 1h-4c-.55 0-1-.45-1-1V9.26c-1.19-.69-2-1.97-2-3.42C8 6.01 9.79 4 12 4s4 2.01 4 4.84c0 1.45-.81 2.73-2 3.42z"
          />
          <path
            d="M7 20c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2v-1H7v1z"
          />
        </svg>
        Victory Memorial Park
      </a>
      
      <div class="flex items-center space-x-4">
        <button
          id="theme-toggle"
          class="p-2 rounded-lg hover:bg-gray-700 transition-colors"
          aria-label="Toggle dark mode"
        >
          <svg
            id="sun-icon"
            class="w-6 h-6 hidden"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
            />
          </svg>
          <svg
            id="moon-icon"
            class="w-6 h-6"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z" />
          </svg>
        </button>
        
        <div class="hidden md:flex items-center space-x-6">
          {menuItems.map(item => (
            'submenu' in item ? (
              <div class="relative group">
                <button class="hover:text-gray-300 py-2 px-3 flex items-center">
                  {item.title}
                  <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                  </svg>
                </button>
                <div class="absolute left-0 mt-2 w-48 bg-white dark:bg-gray-800 rounded-md shadow-lg py-1 hidden group-hover:block z-50">
                  {(item.submenu ?? []).map(subItem => (
                    <a
                      href={subItem.href}
                      class="block px-4 py-2 text-gray-800 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700"
                    >
                      {subItem.title}
                    </a>
                  ))}
                </div>
              </div>
            ) : (
              <a href={item.href} class="hover:text-gray-300 py-2 px-3">
                {item.title}
              </a>
            )
          ))}
        </div>

        <button class="md:hidden">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>
  </nav>
</header>

<script>
  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
    return 'light';
  })();

  if (theme === 'light') {
    document.documentElement.classList.remove('dark');
  } else {
    document.documentElement.classList.add('dark');
  }

  window.localStorage.setItem('theme', theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle('dark');

    const isDark = element.classList.contains('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
    
    // Toggle icons
    document.getElementById('sun-icon')?.classList.toggle('hidden');
    document.getElementById('moon-icon')?.classList.toggle('hidden');
  };

  document
    .getElementById('theme-toggle')
    ?.addEventListener('click', handleToggleClick);
</script>